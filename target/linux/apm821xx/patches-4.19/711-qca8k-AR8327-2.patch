--- a/drivers/net/dsa/qca8k.c
+++ b/drivers/net/dsa/qca8k.c
@@ -625,48 +625,6 @@ qca8k_port_set_status(struct qca8k_priv
 		qca8k_reg_clear(priv, QCA8K_REG_PORT_STATUS(port), mask);
 }
 
-static void
-qca8327_phy_fixup(struct qca8k_priv *priv, int phy)
-{
-	switch (priv->chip_rev) {
-	case 1:
-		/* For 100M waveform */
-		qca8k_phy_dbg_write(priv, phy, 0, 0x02ea);
-		/* Turn on Gigabit clock */
-		qca8k_phy_dbg_write(priv, phy, 0x3d, 0x68a0);
-		break;
-
-	case 2:
-		qca8k_phy_mmd_write(priv, phy, 0x7, 0x3c, 0x0);
-		/* fallthrough */
-	case 4:
-		qca8k_phy_mmd_write(priv, phy, 0x3, 0x800d, 0x803f);
-		qca8k_phy_dbg_write(priv, phy, 0x3d, 0x6860);
-		qca8k_phy_dbg_write(priv, phy, 0x5, 0x2c46);
-		qca8k_phy_dbg_write(priv, phy, 0x3c, 0x6000);
-		break;
-	}
-}
-
-static int
-qca8k_to_real_phy(struct dsa_switch *ds, int phy)
-{
-	struct device_node *phy_dn, *port_dn;
-	int id;
-
-	port_dn = ds->ports[phy].dn;
-	if (!port_dn)
-		return -EINVAL;
-
-	phy_dn = of_parse_phandle(port_dn, "phy-handle", 0);
-	if (!phy_dn)
-		return -ENODEV;
-
-	id = of_mdio_parse_addr(ds->dev, phy_dn);
-	of_node_put(phy_dn);
-	return id;
-}
-
 static int
 qca8k_setup(struct dsa_switch *ds)
 {
@@ -780,12 +738,6 @@ qca8k_setup(struct dsa_switch *ds)
 		}
 	}
 
-	if (of_device_is_compatible(priv->dev->of_node, "qca,qca8327")) {
-		for (i = 0; i < DSA_MAX_PORTS; i++)
-			if (dsa_is_user_port(ds, i))
-				qca8327_phy_fixup(priv, qca8k_to_real_phy(ds, i));
-	}
-
 	/* Flush the FDB table */
 	qca8k_fdb_flush(priv);
 
@@ -833,37 +785,6 @@ qca8k_adjust_link(struct dsa_switch *ds,
 	qca8k_port_set_status(priv, port, 1);
 }
 
-static int
-qca8k_phy_read(struct dsa_switch *ds, int phy, int regnum)
-{
-	struct qca8k_priv *priv = (struct qca8k_priv *)ds->priv;
-	int realphy = qca8k_to_real_phy(ds, phy);
-
-	pr_info("R %d %d\n", phy, realphy);
-	if (realphy < 0)
-		return realphy;
-
-	WARN_ON(1);
-
-	return mdiobus_read(priv->bus, realphy, regnum);
-}
-
-static int
-qca8k_phy_write(struct dsa_switch *ds, int phy, int regnum, u16 val)
-{
-	struct qca8k_priv *priv = (struct qca8k_priv *)ds->priv;
-	int realphy = qca8k_to_real_phy(ds, phy);
-
-	pr_info("W %d %d\n", phy, realphy);
-
-	WARN_ON(1);
-
-	//if (realphy < 0)
-	//	return realphy;
-
-	return mdiobus_write(priv->bus, realphy, regnum, val);
-}
-
 static void
 qca8k_get_strings(struct dsa_switch *ds, int port, u32 stringset, uint8_t *data)
 {
@@ -1104,8 +1025,6 @@ static const struct dsa_switch_ops qca8k
 	.setup			= qca8k_setup,
 	.adjust_link            = qca8k_adjust_link,
 	.get_strings		= qca8k_get_strings,
-	.phy_read		= qca8k_phy_read,
-	.phy_write		= qca8k_phy_write,
 	.get_ethtool_stats	= qca8k_get_ethtool_stats,
 	.get_sset_count		= qca8k_get_sset_count,
 	.get_mac_eee		= qca8k_get_mac_eee,
